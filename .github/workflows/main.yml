on:
  push:
    branches: [main]

name: Upload Release Asset

jobs:
  build_windows:
    name: Build .exe file
    runs-on: windows-latest
    steps:
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pyinstaller main.py --onefile
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: ./dist/main.exe
  build_mac:
    name: Build .app file
    needs: build_windows
    runs-on: macOS-latest
    steps:
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
        # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pyinstaller main.py --onefile
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: mac
          path: ./dist/main
          
  build:
    needs: build_mac
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: get artifacts
        uses: actions/download-artifact@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}hfkasdajdasaahf
          release_name: Realeaasdre34ase ${{ github.ref }}aadasad
          draft: false
          prerelease: false
      - run: |
          ls
          ls dist
          set -x
          assets=()
          for asset in ./dist/*; do
          assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
